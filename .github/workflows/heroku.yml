name: "Deploy"

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main
    paths-ignore:
      - 'README.md'

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: projections_service
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  APP: fastapi-projections-service

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: ./execute_tests.sh

  # Push image to GitHub Packages and heroku registry.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into GithHub registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Log into Heroku registry
        run: heroku container:login

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

          HEROKU_IMAGE=registry.heroku.com/$APP/web
          docker tag $IMAGE_ID:$VERSION $HEROKU_IMAGE
          docker push $HEROKU_IMAGE
  
  deploy:  
    needs: push

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Deploy image
        run: heroku container:release web -a $APP

  post_deploy_test:
    needs: deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest requests
    - name: Test with pytest
      run: |
        pytest tests/end_to_end_test.py
      env:
        BASE_URL: https://fastapi-projections-service.herokuapp.com
